// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagerAPI.Data;

#nullable disable

namespace TaskManagerAPI.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    partial class TaskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("TaskManagerAPI.Models.TaskComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Looks alright!",
                            TaskItemId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Needs more detail.",
                            TaskItemId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Starstruck",
                            TaskItemId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Go through all the endpoints",
                            TaskItemId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Comment = "Check the imports",
                            TaskItemId = 4,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TaskManagerAPI.Models.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedUserId = 2,
                            Description = "Test Description",
                            Status = "Completed",
                            Title = "Sample Task"
                        },
                        new
                        {
                            Id = 2,
                            AssignedUserId = 1,
                            Description = "Important",
                            Status = "Assigned",
                            Title = "Do something important"
                        },
                        new
                        {
                            Id = 3,
                            AssignedUserId = 3,
                            Description = "Arts",
                            Status = "Assigned",
                            Title = "Write a poem"
                        },
                        new
                        {
                            Id = 4,
                            AssignedUserId = 2,
                            Description = "CRUD",
                            Status = "Assigned",
                            Title = "Test API"
                        });
                });

            modelBuilder.Entity("TaskManagerAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "admin",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "user",
                            Role = 1,
                            Username = "user"
                        },
                        new
                        {
                            Id = 3,
                            Password = "newuser",
                            Role = 1,
                            Username = "newuser"
                        });
                });

            modelBuilder.Entity("TaskManagerAPI.Models.TaskComment", b =>
                {
                    b.HasOne("TaskManagerAPI.Models.TaskItem", "TaskItem")
                        .WithMany("Comments")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagerAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("TaskItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskManagerAPI.Models.TaskItem", b =>
                {
                    b.HasOne("TaskManagerAPI.Models.User", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AssignedUser");
                });

            modelBuilder.Entity("TaskManagerAPI.Models.TaskItem", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
